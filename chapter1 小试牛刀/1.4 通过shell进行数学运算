1.预备知识
  在Bash shell环境中，可以利用let、(())和[]执行基本的算数操作。而在进行高级操作时，expr和bc这两个工具也会非常有用。
2.实战演练
  可以用普通的变量赋值方法定义数值，这时，它会被存储为字符串。然而，我们可以用一些方法使它能像数字一样进行处理。
  #!/bin/bash
  no1=4;
  no2=5;
  let命令可以直接执行基本的算数操作。
  当使用let时，变量名之前不需要载添加$,例如：
  let result=no1+no2
  echo $result
  (1)自加操作
     $ let no1++
  (2)自减操作
     $ let no1--
  (3)简写形式
     let no+=6
     let no-=6
     它们分别等同于let no=no+6和let no=no-6。
  (4)其他方法
     操作符[]的使用方法和let命令类似:
     resutl=$[ no1 + no2 ]
     在[]中也可以使用$前缀，例如:
     result=$[ $no1 + 5 ]
     也可以使用(())，但是使用(())时，变量名之前需要加上$:
     result=$(( no1 + 50 ))
     expr同样可以用于基本算数操作:
     result=`expr 3 + 4`
     result=$(expr $no1 + 5)
     以上这些方法只能用于整数运算，而不支持浮点数。
     bc是一个用于数学运算的高级工具，这个精密计算器包含了大量的选项。我们可以借助它执行浮点数运算并应用一些高级函数:
     echo "4 * 0.56" | bc
     2.24
     
     no=54;
     result=`echo "$no * 1.5" | bc`
     echo $result
     81.0
     其他参数可以置于要执行的具体操作之前，同时以分号作为定界符，通过stdin传递给bc
     
