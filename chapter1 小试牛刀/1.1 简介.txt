1.$表示普通用户,#表示超级用户(root user)。超级用户是Linux系统中权限最高的用户。
2.shell脚本通常是一个以#!起始的文本文件,如下所示:
  #!/bin/bash
3.有两种运行脚本的方式。一种是将脚本作为sh的命令行参数，另一种是将脚本作为具有执行权限的可执行文件。
  将脚本作为命令行参数时的运行方式如下:
  $ sh script.sh  #假设脚本位于当前目录下
  或者
  $ sh /home/path/script.sh  #使用script.sh的完整路径
  如果将脚本作为sh的命令行参数来运行，那么脚本中shebang行也就没什么用处了。
4.为了使shell脚本能够自己独立运行，需要具备可执行权限。要使脚本独立运行，必须利用shebang行。它通过使用位于#!之后的解释器来运行脚本。
  至于脚本的可执行权限，可以通过以下方式设置:
  $ chmod a+x script.sh
  该命令赋予所有用户script.sh文件的可执行权限。这个脚本能以下列方式执行:
  $ ./script.sh  #./表示当前目录
  或者
  $ /home/path/script.sh  #使用脚本的完整路径
  shell程序读取脚本的首行，查看shebang行是否为#!/bin/bash。它会识别/bin/bash/，并在内部以如下命令行执行该脚本:
  $ /bin/bash script.sh
5.当打开一个终端的时候，该终端最初会执行一组命令来定义诸如提示文本、颜色等各类设置。这组命令来自位于用户home目录中的.bashrc脚本文件
  (~/.bashrc)。Bash还维护了一个历史记录文件~/.bash_history，用于保存用户运行过的命令。~是一种简写，代表用户home目录的路径。
6.在Bash中，每个命令或是命令序列是通过使用分号或换行符来分隔的。比如:
  $ cmd1;cmd2
  它等同于:
  $ cmd1
  $ cmd2
7.字符#指明注释的开始。注释部分以#为起始，一直延续到行尾。注释行通常用于为代码提供注释信息，或者用户暂停执行某行代码。
